<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20203.20.1018.2303                               -->
<workbook original-version='18.1' source-build='2020.3.2 (20203.20.1018.2303)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='map' inline='true' name='federated.0li5ttp1wno90i16cw84w1uymlfv' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='map' name='textscan.062o5st18wgtui0zly0sn0j8bebw'>
            <connection class='textscan' directory='C:/Users/ckdck/workspace/KT_data_20200717' filename='map.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.062o5st18wgtui0zly0sn0j8bebw' name='map.csv' table='[map#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='ko_KR' separator=','>
            <column datatype='date' name='receipt_dttm' ordinal='0' />
            <column datatype='integer' name='adstrd_code' ordinal='1' />
            <column datatype='integer' name='adstrd_nm' ordinal='2' />
            <column datatype='integer' name='mrhst_induty_cl_code' ordinal='3' />
            <column datatype='string' name='mrhst_induty_cl_nm' ordinal='4' />
            <column datatype='integer' name='selng_cascnt' ordinal='5' />
            <column datatype='integer' name='salamt' ordinal='6' />
            <column datatype='string' name='brtc_nm' ordinal='7' />
            <column datatype='string' name='signgu_nm' ordinal='8' />
            <column datatype='real' name='latitude' ordinal='9' />
            <column datatype='real' name='longitude' ordinal='10' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.062o5st18wgtui0zly0sn0j8bebw' name='map.csv' table='[map#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='ko_KR' separator=','>
            <column datatype='date' name='receipt_dttm' ordinal='0' />
            <column datatype='integer' name='adstrd_code' ordinal='1' />
            <column datatype='integer' name='adstrd_nm' ordinal='2' />
            <column datatype='integer' name='mrhst_induty_cl_code' ordinal='3' />
            <column datatype='string' name='mrhst_induty_cl_nm' ordinal='4' />
            <column datatype='integer' name='selng_cascnt' ordinal='5' />
            <column datatype='integer' name='salamt' ordinal='6' />
            <column datatype='string' name='brtc_nm' ordinal='7' />
            <column datatype='string' name='signgu_nm' ordinal='8' />
            <column datatype='real' name='latitude' ordinal='9' />
            <column datatype='real' name='longitude' ordinal='10' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[map.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;ko&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;₩&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;ko_KR&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>receipt_dttm</remote-name>
            <remote-type>133</remote-type>
            <local-name>[receipt_dttm]</local-name>
            <parent-name>[map.csv]</parent-name>
            <remote-alias>receipt_dttm</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[map.csv_C034094054AC4AB88AC9E934F343115A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>adstrd_code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[adstrd_code]</local-name>
            <parent-name>[map.csv]</parent-name>
            <remote-alias>adstrd_code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[map.csv_C034094054AC4AB88AC9E934F343115A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>adstrd_nm</remote-name>
            <remote-type>20</remote-type>
            <local-name>[adstrd_nm]</local-name>
            <parent-name>[map.csv]</parent-name>
            <remote-alias>adstrd_nm</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[map.csv_C034094054AC4AB88AC9E934F343115A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mrhst_induty_cl_code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[mrhst_induty_cl_code]</local-name>
            <parent-name>[map.csv]</parent-name>
            <remote-alias>mrhst_induty_cl_code</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[map.csv_C034094054AC4AB88AC9E934F343115A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mrhst_induty_cl_nm</remote-name>
            <remote-type>129</remote-type>
            <local-name>[mrhst_induty_cl_nm]</local-name>
            <parent-name>[map.csv]</parent-name>
            <remote-alias>mrhst_induty_cl_nm</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LKO_RKR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[map.csv_C034094054AC4AB88AC9E934F343115A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>selng_cascnt</remote-name>
            <remote-type>20</remote-type>
            <local-name>[selng_cascnt]</local-name>
            <parent-name>[map.csv]</parent-name>
            <remote-alias>selng_cascnt</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[map.csv_C034094054AC4AB88AC9E934F343115A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>salamt</remote-name>
            <remote-type>20</remote-type>
            <local-name>[salamt]</local-name>
            <parent-name>[map.csv]</parent-name>
            <remote-alias>salamt</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[map.csv_C034094054AC4AB88AC9E934F343115A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>brtc_nm</remote-name>
            <remote-type>129</remote-type>
            <local-name>[brtc_nm]</local-name>
            <parent-name>[map.csv]</parent-name>
            <remote-alias>brtc_nm</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LKO_RKR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[map.csv_C034094054AC4AB88AC9E934F343115A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>signgu_nm</remote-name>
            <remote-type>129</remote-type>
            <local-name>[signgu_nm]</local-name>
            <parent-name>[map.csv]</parent-name>
            <remote-alias>signgu_nm</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LKO_RKR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[map.csv_C034094054AC4AB88AC9E934F343115A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[map.csv]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[map.csv_C034094054AC4AB88AC9E934F343115A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[map.csv]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[map.csv_C034094054AC4AB88AC9E934F343115A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='map.csv' datatype='table' name='[__tableau_internal_object_id__].[map.csv_C034094054AC4AB88AC9E934F343115A]' role='measure' type='quantitative' />
      <column caption='Adstrd Code' datatype='integer' name='[adstrd_code]' role='dimension' type='ordinal' />
      <column caption='Adstrd Nm' datatype='integer' hidden='true' name='[adstrd_nm]' role='measure' type='quantitative' />
      <column caption='Brtc Nm' datatype='string' name='[brtc_nm]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Mrhst Induty Cl Code' datatype='integer' name='[mrhst_induty_cl_code]' role='dimension' type='ordinal' />
      <column caption='Mrhst Induty Cl Nm' datatype='string' name='[mrhst_induty_cl_nm]' role='dimension' type='nominal' />
      <column caption='Receipt Dttm' datatype='date' name='[receipt_dttm]' role='dimension' type='ordinal' />
      <column caption='Salamt' datatype='integer' name='[salamt]' role='measure' type='quantitative' />
      <column caption='Selng Cascnt' datatype='integer' name='[selng_cascnt]' role='measure' type='quantitative' />
      <column caption='Signgu Nm' datatype='string' name='[signgu_nm]' role='dimension' type='nominal' />
      <column-instance column='[longitude]' derivation='Avg' name='[avg:longitude:ok]' pivot='key' type='ordinal' />
      <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[longitude]' derivation='None' name='[none:longitude:qk]' pivot='key' type='quantitative' />
      <group hidden='true' name='[제외(Latitude,Longitude)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:latitude:qk]' />
          <groupfilter function='level-members' level='[none:longitude:qk]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[avg:longitude:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>127.26565647257145</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>127.26565647272227</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;대한민국&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='map.csv' id='map.csv_C034094054AC4AB88AC9E934F343115A'>
            <properties context=''>
              <relation connection='textscan.062o5st18wgtui0zly0sn0j8bebw' name='map.csv' table='[map#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='ko_KR' separator=','>
                  <column datatype='date' name='receipt_dttm' ordinal='0' />
                  <column datatype='integer' name='adstrd_code' ordinal='1' />
                  <column datatype='integer' name='adstrd_nm' ordinal='2' />
                  <column datatype='integer' name='mrhst_induty_cl_code' ordinal='3' />
                  <column datatype='string' name='mrhst_induty_cl_nm' ordinal='4' />
                  <column datatype='integer' name='selng_cascnt' ordinal='5' />
                  <column datatype='integer' name='salamt' ordinal='6' />
                  <column datatype='string' name='brtc_nm' ordinal='7' />
                  <column datatype='string' name='signgu_nm' ordinal='8' />
                  <column datatype='real' name='latitude' ordinal='9' />
                  <column datatype='real' name='longitude' ordinal='10' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='맵'>
      <table>
        <view>
          <datasources>
            <datasource caption='map' name='federated.0li5ttp1wno90i16cw84w1uymlfv' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0li5ttp1wno90i16cw84w1uymlfv'>
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[signgu_nm]' derivation='None' name='[none:signgu_nm:nk]' pivot='key' type='nominal' />
            <column caption='Salamt' datatype='integer' name='[salamt]' role='measure' type='quantitative' />
            <column caption='Selng Cascnt' datatype='integer' name='[selng_cascnt]' role='measure' type='quantitative' />
            <column caption='Signgu Nm' datatype='string' name='[signgu_nm]' role='dimension' type='nominal' />
            <column-instance column='[salamt]' derivation='Sum' name='[sum:salamt:qk]' pivot='key' type='quantitative' />
            <column-instance column='[selng_cascnt]' derivation='Sum' name='[sum:selng_cascnt:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0li5ttp1wno90i16cw84w1uymlfv].[none:longitude:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.0li5ttp1wno90i16cw84w1uymlfv].[none:signgu_nm:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:signgu_nm:nk]' member='&quot;강남구&quot;' />
              <groupfilter function='member' level='[none:signgu_nm:nk]' member='&quot;강북구&quot;' />
              <groupfilter function='member' level='[none:signgu_nm:nk]' member='&quot;금천구&quot;' />
              <groupfilter function='member' level='[none:signgu_nm:nk]' member='&quot;도봉구&quot;' />
              <groupfilter function='member' level='[none:signgu_nm:nk]' member='&quot;서초구&quot;' />
              <groupfilter function='member' level='[none:signgu_nm:nk]' member='&quot;송파구&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0li5ttp1wno90i16cw84w1uymlfv].[제외(Latitude,Longitude)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:latitude:qk]' />
                <groupfilter function='level-members' level='[none:longitude:qk]' />
              </groupfilter>
              <groupfilter function='union'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:latitude:qk]' member='35.106321000000001' />
                  <groupfilter function='member' level='[none:longitude:qk]' member='129.03225600000002' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:latitude:qk]' member='35.212423999999999' />
                  <groupfilter function='member' level='[none:longitude:qk]' member='128.98068000000001' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:latitude:qk]' member='35.569468000000001' />
                  <groupfilter function='member' level='[none:longitude:qk]' member='129.332773' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:latitude:qk]' member='35.869551000000001' />
                  <groupfilter function='member' level='[none:longitude:qk]' member='128.60618400000001' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:latitude:qk]' member='36.325735000000002' />
                  <groupfilter function='member' level='[none:longitude:qk]' member='127.421317' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:latitude:qk]' member='37.473761000000003' />
                  <groupfilter function='member' level='[none:longitude:qk]' member='126.62169299999999' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0li5ttp1wno90i16cw84w1uymlfv].[none:longitude:qk]</column>
            <column>[federated.0li5ttp1wno90i16cw84w1uymlfv].[제외(Latitude,Longitude)]</column>
            <column>[federated.0li5ttp1wno90i16cw84w1uymlfv].[none:signgu_nm:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0li5ttp1wno90i16cw84w1uymlfv].[none:longitude:qk]' field-type='quantitative' max='14164473.31298024' min='14106490.174063891' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0li5ttp1wno90i16cw84w1uymlfv].[none:latitude:qk]' field-type='quantitative' max='4534613.7025950905' min='4500982.5394857265' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0li5ttp1wno90i16cw84w1uymlfv].[sum:salamt:qk]' palette='blue_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0li5ttp1wno90i16cw84w1uymlfv].[sum:salamt:qk]' />
              <size column='[federated.0li5ttp1wno90i16cw84w1uymlfv].[sum:selng_cascnt:qk]' />
              <text column='[federated.0li5ttp1wno90i16cw84w1uymlfv].[none:signgu_nm:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='7.4908275604248047' />
                <format attr='mark-color' value='#fabfd2' />
                <format attr='mark-transparency' value='203' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
                <format attr='has-halo' value='false' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0li5ttp1wno90i16cw84w1uymlfv].[none:latitude:qk]</rows>
        <cols>[federated.0li5ttp1wno90i16cw84w1uymlfv].[none:longitude:qk]</cols>
      </table>
      <simple-id uuid='{C9F37053-C0E5-4223-8397-91FC20E565A2}' />
    </worksheet>
    <worksheet name='시트 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='map' name='federated.0li5ttp1wno90i16cw84w1uymlfv' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0li5ttp1wno90i16cw84w1uymlfv'>
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[signgu_nm]' derivation='None' name='[none:signgu_nm:nk]' pivot='key' type='nominal' />
            <column caption='Salamt' datatype='integer' name='[salamt]' role='measure' type='quantitative' />
            <column caption='Signgu Nm' datatype='string' name='[signgu_nm]' role='dimension' type='nominal' />
            <column-instance column='[salamt]' derivation='Sum' name='[sum:salamt:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0li5ttp1wno90i16cw84w1uymlfv].[none:longitude:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.0li5ttp1wno90i16cw84w1uymlfv].[none:signgu_nm:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:signgu_nm:nk]' member='&quot;강남구&quot;' />
              <groupfilter function='member' level='[none:signgu_nm:nk]' member='&quot;강북구&quot;' />
              <groupfilter function='member' level='[none:signgu_nm:nk]' member='&quot;금천구&quot;' />
              <groupfilter function='member' level='[none:signgu_nm:nk]' member='&quot;도봉구&quot;' />
              <groupfilter function='member' level='[none:signgu_nm:nk]' member='&quot;서초구&quot;' />
              <groupfilter function='member' level='[none:signgu_nm:nk]' member='&quot;송파구&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0li5ttp1wno90i16cw84w1uymlfv].[제외(Latitude,Longitude)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:latitude:qk]' />
                <groupfilter function='level-members' level='[none:longitude:qk]' />
              </groupfilter>
              <groupfilter function='union'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:latitude:qk]' member='35.106321000000001' />
                  <groupfilter function='member' level='[none:longitude:qk]' member='129.03225600000002' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:latitude:qk]' member='35.212423999999999' />
                  <groupfilter function='member' level='[none:longitude:qk]' member='128.98068000000001' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:latitude:qk]' member='35.569468000000001' />
                  <groupfilter function='member' level='[none:longitude:qk]' member='129.332773' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:latitude:qk]' member='35.869551000000001' />
                  <groupfilter function='member' level='[none:longitude:qk]' member='128.60618400000001' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:latitude:qk]' member='36.325735000000002' />
                  <groupfilter function='member' level='[none:longitude:qk]' member='127.421317' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:latitude:qk]' member='37.473761000000003' />
                  <groupfilter function='member' level='[none:longitude:qk]' member='126.62169299999999' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0li5ttp1wno90i16cw84w1uymlfv].[none:longitude:qk]</column>
            <column>[federated.0li5ttp1wno90i16cw84w1uymlfv].[제외(Latitude,Longitude)]</column>
            <column>[federated.0li5ttp1wno90i16cw84w1uymlfv].[none:signgu_nm:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0li5ttp1wno90i16cw84w1uymlfv].[none:longitude:qk]' field-type='quantitative' max='14170582.446638299' min='14101124.444537444' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0li5ttp1wno90i16cw84w1uymlfv].[none:latitude:qk]' field-type='quantitative' max='4536255.3932186645' min='4495968.6229340388' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.0li5ttp1wno90i16cw84w1uymlfv].[sum:salamt:qk]' />
              <text column='[federated.0li5ttp1wno90i16cw84w1uymlfv].[none:signgu_nm:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='7.4908275604248047' />
                <format attr='mark-color' value='#fabfd2' />
                <format attr='mark-transparency' value='203' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
                <format attr='has-halo' value='false' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0li5ttp1wno90i16cw84w1uymlfv].[none:latitude:qk]</rows>
        <cols>[federated.0li5ttp1wno90i16cw84w1uymlfv].[none:longitude:qk]</cols>
      </table>
      <simple-id uuid='{B0B2C299-3152-4798-AAD1-39DB1D79D0D6}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' maximized='true' name='시트 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='29'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0li5ttp1wno90i16cw84w1uymlfv].[sum:salamt:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0li5ttp1wno90i16cw84w1uymlfv].[avg:longitude:ok]</field>
            <field>[federated.0li5ttp1wno90i16cw84w1uymlfv].[none:signgu_nm:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{2CB0DA97-6530-40A6-9A13-3C9A441CE05B}' />
    </window>
    <window class='worksheet' name='맵'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0li5ttp1wno90i16cw84w1uymlfv].[sum:selng_cascnt:qk]' type='size' />
            <card pane-specification-id='2' param='[federated.0li5ttp1wno90i16cw84w1uymlfv].[sum:salamt:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0li5ttp1wno90i16cw84w1uymlfv].[avg:longitude:ok]</field>
            <field>[federated.0li5ttp1wno90i16cw84w1uymlfv].[none:signgu_nm:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{BC39EBEA-C890-4722-8AB1-B2D0BF3BCF11}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='맵' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nNS96Y8kSXYn9jO/4szIrLyz7rPr7urp6RlqRosltSuuuCQgQIAA/QP6Y/RV
      0kdB0peFQAECgQUFYpcLzpIih8vpmu6u+74yq/I+IzPj9MP0weNZmFuYe7hHRB77KyQqM8IP
      c/Nnz9792NraGmeMIQm67/udc5QIgiDxe8aYdnycc3DOtZ/3u54KwzAQBIH4X3c8XVe9vjwO
      9Tv5XlmfQz1HvRYQzh2d3++5ddeOQ9ZrZYHjONjf30epVILv+wNdg+bFMIzIHFn0YdxJut9P
      Epzz2PEC8UQDhC9f/i7LS5OJijEWGYdpmloip+OS5i7uO7pP3GKKY0ry3MQ9az8GEoe4uR/0
      elnw5csX3LlzZ+AFAETnlJ7DijtQ/v80QSUK+cUmEX/cteg6MtRr0mfyvMjHOI6Ddrvdw1kN
      w0CxWEQQBGi32wB6iUW3A6hcPO1ClRemYRjivCAIBOcf5p3G7UZHBZnZAEhkfGmuI/9N6FkA
      WYnopCATWpoFG/ei5M91CyrNtTjnKBQKqNfrgsjy+Twsy0K73YbruuJYeol0LyJMup+6AFQk
      LQiV6JPEq1FgEDGqH2jxMsbgOA5ev36N8fFx1Ov1gReAfG11DsQCOM1cn6CTm5PkZPVYy7Lg
      eV7s9XXcXndd9bt2uw3f92HbtnhJruui1Wppz9ftFPL91ev32wVk2Va9j/p7muvF3eOoaSOX
      y2FpaQmHh4fgnKNUKuHGjRsAgHK5rJ3PNEgSDa1+HOekEacsEnRybppj1c9VLhw3lrjvfN/v
      K5/Gccw0nC1JFJDfoe76/ZTyYTDIYtLBcRysrq5idnYWFy9eBBDOaaPREPcZRP5XdbeeHUCV
      N23bFvLqSaPfFhvH8ehv+TjbtrXcX3eNuB1mUEbRj/CTCDdJ6aUFqdNl0ug3w2JUxJ/P57Gy
      soIzZ87ANM2BOX0ckqQbwUosy/rPjvizWHR0MnHae+nulwaqjK+7Xpw1J+lz1aRH38Up1EeF
      UegApmnip59+wtTUFEzTHLlFSRUN5d9t2w51AMuywDlPTfwqpz2KiU7iLmmIX31QWRGVoXuJ
      Oo6fZbHp5O+4nUT3nIMQ1ai4cRyOaifZ2trCuXPnYJpmon42CHS6lOM44m/XdWHQqut3c+Jm
      wzhSskJ1WgDxW7sOqvIjI447q9w1iRvr/pbnJun6WaCOR/dMaeZj2Hd2FO99YWEBm5ubR0JL
      NM+GYSCXywmrHP1wzmH5vt/3pRyHoyMOxNnk8fmBD845TNMEQzzn45z3iHWjfoHqvMWZZwe1
      ssnnxb2HOO6vWpyOmmENAs45Ll68CMMwhnJy6SAzjjgGb9CBcYNLQ/zHYUGiF+gHATjCF+n7
      Pjzfg59ijDJHljm0/KOKdklEo+5OMtGTLVu2aQ+jQNOzyp/1u5ZK+CfJxJLg+z6WlpZGek3G
      GCzLgmmaWts/oVarwUp6yWnFjKOCXj4HDJiAweigWPMecUZ6+f24YJLFRf6cHE460ewoZPG4
      a5L4qpPPk8Sw04QgCHDp0iVYlhWrp2WBjvHo8P7TIl5vHCYvgLRIw5EGva4MxhgMZkS+54gn
      WFn8yWJSpb9VsaXfwqD7JIok4GBIH+qgfk/j4pz37Aryc55msUcG5xzVahVBEEQU1KyQ9SPV
      264uhLW1NXw6CHD59tf6WKCsDyD/HzewQa+bRXaWjzFNM0IgaYg3rfUnq+VGiFucA+AAY7AM
      U8j1OiLXXZs+l7m6anFSPxsWcWM5aejESnl+5GNUPHn7Cece/BpATDBcP2ThpINiGNOqbdtC
      rpfHlMWaoxK+/MxkOEhLDN1rAugo7RwA3YFzLrbsOHmdvovj7v0YUVbo5uGo9Ihms4mZmZnU
      +qZqCZNFXEKSd73mdiWWzAsgibukIbBRQrdILMtCEASC+/cbU1plcvjBAjzobse+7wOmCUN6
      hiSn2XGKNsMwn0EwNjYmTJRJiBNxdMfJFqBeSPFhgww4jTghbtVHsRwWOs6X5NMYNqJQvm+W
      XcBgBjgDOA86LwgwJE6mV/j18T0665P8nW6so9DzjgKcc0xNTWF9fR2Tk5OJ95F3SRnyM6ex
      upXtrhGDra+v81ERBSHgAXjAIytw1PfQET7dI8lenmTypWOS7qmT1bMQR8CjXN5gemuFeu0k
      S13cMfLfWcQXdTxHteOYpgnLsrC7uwvLspDL5VKZneN28LQ7+8bmJh6vVHHu6s3hlWAdaLL9
      wIdpmEdC/LqJStpG+xG/H/hgYDBNM/G+6jmmEX+8bgyB3yVEzjk4Cx16snVLPUf+P3JuSu5P
      3w1i1j4K4rdtG81mE4uLi2i327h9+3aPVUs3JnkBZDGOqJidmcFXzRaePf+p/wKgm2VVgBzH
      ged5CHgAA6NdADqQ7B+HNBPV7zXLRBTwriPNsZ1URKLNHR5SMtQtbNn8F7kX0u9WR8X1DcNA
      q9XC8vIyrly5ImKA0hpWVAV4UFy6cB5zM9PxC4CSO1zXhWEYsKzwUM/z+i4G0zAR+AHyuTza
      rhvLKYfVC+TzLctCs9mMPVYes0o0XuCDgaw0yfdjjCHgAQAuHGKu58K27L6mUABh6Ia01BhY
      LPcfFLLukHaOj0vJtm0b6+vruHHjBlqtVmrGqj5HUoBjWuTz+ficYNu2Ua/XAUSJx7Zt4WBK
      sgb5gQ8/CFAsFlFv1BH4Qc9KHtSBxljo6pa3zGG4gsmMcKdKSYiq2Y3EIQDaa8gEpZP1B52D
      URgWVJ8CydqyJW1UYIyh1WplDruXnVmD6F0yXjx5iK1qCwYDvvnFr/WyCSV5E9eXQal+pmnC
      cRzxk8vlIsdZpgXPI+5vwA98Mdl+EMbwDMNjdFlRQKh3qIomfR9nHTAMA5ZppTaJ8iAaV0Tf
      +b6vNWXKxG8YBkzDhGmYsEwLlnkkalgqqAq94zhYW1tDvV7H0tLSUJ5ZFZZlwbIsrK2tYW5u
      LpMPpZ/ymwXFYgmB6yLggOd74Q6gkxc9z4NhGGIxqOiXW8sYA+MMnusil8sjCDja7TDTJy3B
      xUHN7VWJj7yrpmlF7Ozy8fJYk6Dzssr/q+f7gQ/DMMGkOY1LYTwtME0TOzs7MAwD5XIZ4+Pj
      WF5eBtCtfxSHfs9Bz/7mzRu0223cvXs3U8ZXFpN7GvAgwM7SFxSuXEK1WgVbW1vjsrmSODvl
      YgKIXQRJgxYijmkgn8uj1Wqi1WrBYEYYxpxgkeGcAwyRmBkZ6gIgka3RaITWHGUxE5fVEW+/
      iZRfPo2Ndi+GaCUGemYKUjMMAzzgEcvSaSN+ANjf38fKygru3LkD13UFI3n8+DHu3r0Lx3Ei
      nnUg/XPkcjlsbGzgzJkzQqfMIr4QbcoBbkB2moy9fj6fF4WdOOdasSfLgFXi8z0fnufBtuww
      8yxB8OGcI+ABXN9F243XMVSOmsvl0G63hbJuGiZYRxYnmXwQ5U4nytBuKTuxVKUzCKRwa56d
      aI4TjDG8ffsWd+7cEdUtaAF89913aDabeP36NQD0iERp53N9fR2GYSTqjToQ0fcLax4GbH9/
      n1MoKpX2UK0ptECylCSkyQmCAIZpoFgswXVdNJuNDoFG7bgB5/B8tyO+GLA6tnHdQ6vjyefz
      PWOWibWfic22bfi+32PnD3jQiV2TLEa+XvSTxUi6Dj1nnO5x0mCMYX9/H47jREKr5XmwbRum
      aWJ/fx/VahXz8/OZlGM6d3p6OiJVpDlP5foycrncSJLnRUKMbdtwHEdrWvJ9P9FBRBBcT1IE
      5bKBhml0RQhVSQVgGRZsy4Fj2ZFFkjQeHYEneUdV0OLXEb/uResImnMuHH5ih1Di0bMSv9ix
      cDQmScYYms0m1tfXhYij4+gh02qiVCphb28vsz/I930UCgV8+vRJK13oxtWP+EcJMSJySyfV
      t+nHTdVjxcsHQ612CMu0UMgXQkuNxiya5WHjZMEsYg7ZkuX7BkEoggHo2YF01iXQE9KiMOPD
      GtJA6BOGAcYAzoFQimPgnR1pEDDG4LouPn/+DM/z4Ps+FhYWcP369VT2dNd1cffuXTx58gRf
      f/11Jvk7l8vB8zxsbm5iZmYm1oCiYxxHDXZ4eMgdx4kEZTUaDe32YlmWsBD1IzJZTqedwQ9C
      zm2aFnzfyxRGoBsLJVGQ+BNnb9eNlXwJnuf1LIC2F75c27R7ziN7v7guCx1ZZp+CvUl/E6cH
      ANO0OvPlCyMA7Sq5XE54TukdpA1vaLVa2NjYwOzsrDBJUjEE9TpxXF7O242rsxQH27bx6tUr
      3LhxI/H6RPz9FkIulxMKez9LVRJYo9HgZMOXOX+r1YqV2Ww7JIysnjjGmOCiRPwDccfOObZt
      iwUZNwFxROI4To/cT8fLhWRVk2kcMdOx/QhSvUYobnFYtgV0zLlx1i/ZULG2tiZ2sPn5+USi
      2t3dxfr6Om7fvi2eOcnzm0RMtm1jaWlJmEuzEB6Jm7LlTB2rbPEhxNFIyExD3cU0TbEgssAA
      oPX65XI5lEolrYfVdd3QstPRG2w7tPA4jqMdrLyiQ1nZhOf78IJeAkwC7SKyfJ+0gJIIUlfS
      XB6vjvjjjut3L9116VnAukF8vufHKv7y9YMgwOHhIaampuB5Hp4+fdoTLUnE8fbtW+RyOdy6
      dauH2w+iW7iuiytXrgjFOQtoPDpdoMcokqL8ju/7aLfb8DwPrVYLjLHMzjtWq9V40kkkEqWV
      +XTauU4R5Jx3qjnwRIVXhut7AI9GTxYKhZ6dqh8xUp0YnZg3SGxKVr2IzKOUudZxe0RiptTr
      q/ewbRtfvnyBbdsYGxvDu3fvsLCwgK2tLZw9exafPn0CYwwXLlxApVLRlmWXF1TSvVRYloVX
      r15ldmrl83kcHh4in8/3+HFUGpEXc9owF9/3Ua/XUSwWUyvQfRcAwXVdUf67H+IClXQiBHlt
      0wzW8z0wMCHDcs579JE048vlcrGxLrrzR22F4eCwbQeu2xYcn6xjOp0irqeAaZp49eoVbt26
      JbgxWchkx1WSlUy9ftqdbG9vD81mExcvXkxl37csCy9fvsRXX32lHZN8bVliSEPInHM8evYS
      n3YOYRXK8FotlJiHXz24jbGxcvK4Er+VQJym2Wz23Q2yOjvSQMjknUSbYUplk7wY932asaT5
      XHetgIfFujzXjRA/0HH89AnICyQFmYherewn/5618nQacM4xPT2N7e1tbGxsYHp6uq8+SHI/
      7+zgaX0JqmFDN6ePnr2Ee+YCbl2ekE/E3z95iH/9628T36nRbrdTb/vU8aRUKiVelPQDGaqs
      3I/T0PcRvwLv+hKyQOUqWdHPkZWkUKowjNAc6UtxS3QOVbnTLST63HVDmZcccpVKBQAiHJ/O
      kYlOvZ5qcclawMt1XYyPj2NmZgYvX77sed8q2u027t+/j8XFRWFNjIP8vGoDERWe5+HTTg1j
      4xPqRXDh9s/ww6MnibqK0W63cXBwkMq0SaDdIOmhVY6QlkhUoog+E4NjO6nNbzpzWhbuEzc+
      9W/1RdG9dcjn8mEMUR8CUK9P96BFQiKc7/uxwXbqXOssWDqrVFo6oHFcuXIF+/v7fR1drVYL
      169fx/LycuICkKv1yWPV4eDgAHZxTPudZdvY3j9MHJdBD3J4eIhWq5X64Q3DQKlUQrFYHIqr
      ZkGW+pFx1x82kUIlGpLdZSKLEztUBS/pGHUHJIKnz0l8kndwmZOr41G5vc7TmoX4CZ7nIZ/P
      Y21trS9jYiz0PheLxUQGqI5Dtpyp0koul4Pb0idCcc5hsmSRPPKmms0marVaD5FxzgW3UW3n
      juOIshZxiLOd6wbcz3qT5gWlIbBBEWf2TCNipVnAMuFTYJpa44iBiSC7iYmJWP+EbgfU3Yt+
      l58vC1zXxczMDPb39xOPy+Vy2NnZ6Vv9QR4/gB6JQD63UCigwPX64PryEm5fuwzXdZHP57XH
      9LAqz/NwcHCAWq0mHAuq86TnIjG7QT6fRz6fB+dcFCuNkzPTcp8sAXm6cY6iuJNW2WX9iSdt
      DXwd95ch7zCrq6uxZeTTyvQyYQ1q8SqXy9jf34+Vtx3HwePHj1EsFjP1oVCJX/ecv35wG+8f
      fw9fmtv15SWcCQ5w7tw5cM7RarWQy+V6dudYti1nflHIdBI3ISeEZVmo1+vCXU8cjxJsyIWt
      mi7TTHw/i0a/lz3qDjiMMZF/kHZnSqP4A705zOpuk3fyWF1dFSENWQhed89BCZ/gOA5mZ2dF
      ZC2Nk5yjDx8+xIMHD3qerd+40jxPpVLBv/rlfXz/w0MctlyYDLh17RIunL8duV6r1eqJHUus
      C0QTSxyebO8y4rbWdrutDaVgjIn6L7QQ0k5+UhJEP85PYRNJifPy+JMmPUKonahRxliiQy/g
      nSIBfRagLt9Y9zymaWJlZQVnz54V98+6AOQMumEXgmEY2NragmEYmJ2dRRCEjr7Hjx/j/Pnz
      mJycRBaLo3xdVZQbRoxVHaCZCmOVy1GnghqzoSIIArRaregNWddVT9GnsgUlrjwgEK/A6sYg
      tyyVg776gXMO1/dgdnJ3kyDqH/lhSEPS8ZxzFIoFtFu9TiN1N4w7n4jVtm28fPlSZHClKQce
      N37S70axC9h2WBnj1atXIo8ga/UHGTLB6xbA/vYaHj9/idmzs4A3Dbe1hL2DFtzDTVz55Z/B
      33yN1c0q9mot/Nm/+hfiXMdxBE329AlWIXOier2OQqGQuBJlTsIYQ6FQQC6XEw40+UUSMcsP
      SXoC57xHXk77cqkm0aDWHkMyIaa5Z5JyLlt+fN/X9iqOM5/Kpkz5OMYY5ubmtMenRdIOMyhc
      14Vpmrhz5w42NjaEvD+s3hW3u3m+DydXxOTUBH56+BnTxV38zb//B1jlMVz4+gBu20OxWMTy
      ly84bPkYy3d74ZE0wTY2Nnic9UI3+aZpiiA51YQWsVRolBWSw5rNZl8bL+0O8guKizOSz6co
      z2Ft/RRmO6jFSh0f52HAc6lY7BENkwhEZhgE0zRxcHCAzc1NXL9+PSKqpn0+3U+a8Rw1VGKX
      n0t9F63qMv79b1+ikvOxcO1nmMw18PLNIvxmFTd/9a9xxmrh+dMXuH3vDvKFIkwjen4ul4v2
      Ce43MKAbiSiXQpEJX0c08kOQouy6rogq1XFa8iaTFUq+tny8fB7FqI+C4/SLdEzLOWXiMsxe
      K1Q/kYd+l98T5xzj4+P48uXL0K1FIwuU9097PSroxBzdO5bhjM3j5sUtHLQZrl6Yhm0amFm4
      BK+5jwYzUMiVcPP2LZRKJe35rVYrORZInnAZxMllK1FSChtj3UJLNMFyQBvF5jSbzci9XNcV
      YdamaUa6huvuQ1UH0kC8bNab+ZXm3EHg2I7YmZJ2EJ2PQX4XtCDo90GKgsnXlBXvUYpEaREX
      itHvnTDDxM17D3o+t/IVkG94rKL3Eot79xtcP2uI53kRwtRBJf7IYC1LmEd14RXE0dUKDLrr
      ZMlQ4jzM+01SuuPOG4RIwghQu6/CqSN+OVuPiN/3fVy5ckUck2UB6xbUSSHOG31cY0rFOuIm
      lyYyCAIcHByg0WhoB67bWmWFV/5MF2xHYlIul4sdS1KMjzypwrkkKZRHjXCejIhTsf/xUZFP
      Jn7btvH8+XOMj4+PjFBOYhHIi1AOejzKsajXH2lV1larhYODA63ZS97m4uq80EQwxlAulyO7
      QbPZFGY2GZZlIZ/X29fjbNwhcbHIuNJikAXDOYdtWanKgqhigBoNSQvj0qVLmcehu5c6zuOE
      SvjyuAYR69LA871IcYORF6YMggCNRgONRgO2bQsvcj/CIXu0TJDFYjFiNSLFuN1ugzEmqg2o
      ukPSvVSrTBAEYEZ6EWIYIhnUFi4rwYwxHB4eYmlpCZOTkwOPhcaT1RyaVdySkcTd08r9w8Iw
      TASBjwBBWJv1KG9GVh6gW1U6KRZcXSicc1DFimYzLK2Yz+cjSflqJ0j1fBkRBQthyUSGwezn
      WTFsH1xaBJZl4fXr1/j2229HVr05izl3UM6ctPhl4h9mgaWBaRgwGBMFmi2d/V7GsDIZndtu
      twXntiwLhUIhNvNfNcmRbkBKt86rm4X4xd8DPktWZEkeV5VT+Z62bWN5eTlTdeV+iPMFyOMh
      ws+aUKReN43uI/9/VGAsDFvxAz9cAOrKy7otZgHnXESZ6qpOkCikgiY/TonULSD5u2EndVBG
      YFmWEOXS3kd3P8MwwuQP28bU1FQk/icrdO9XZ/KWFXG5Et8wz6GD+hxZ8sQHBS0CSx7AcZqf
      fN/HwcEBCoWCEGniTJKyXkAhrarFKe53oHdxqJ/1w6DzQhYbXY5F2nvRuzFNU5RCIeIfBuo9
      ZN8CfRaXOJP1+rq/5XvLx8gL8Th2AtEf4CTMYJyH8UW5XE6bXkkvRE0IoUCrWq0WW/lAhk7+
      HETuT6toA2EuBBkEskIVBei+jUZD5DQMwyFVglcJn4g/K9dX0U+86jfG48DRd69LgWazKUqu
      0MTHBZjRZFKINn2WFlkJp5+4pfuuUCig3W4L69Ug41N1gZ2dHVHMa5TEoSqgFKUrJy9lhSr+
      JD1/mp3hKHFy/XkU+L6PRqMhssrScnSKNI3DsLJkFq5Plq5GoxEReYYhWrq/53kij2KU4g9B
      tfKMas7oWmnMn8dF9DJOxQ5AD096QVKhJVKSyRJEsUI6jKK8dtrzSSyr1+sDmSdlp53uu6mp
      KdRqtZFVT1atO4PmFMRde5hjj3MhxC6ArB7SUYHzsBSjzmZOxK9arorFYk+TPjp+WBNumvNJ
      ViaHnPoC075QnQlavke5XB7ZopZ/BlV046DO20mLOUkQFK5OCCmexz1IGkOr1dImxFDRV9m2
      HgSBKB2eZuJV5Uz3k0V2lyvN6ThrmjmMk/3l77a3t08F0SRBnf8sTOgkDDGWOvHqQPrJ46OE
      +nIp/od2Ip1iRhPMGEM+n0ej0chc63IYyF115LwF9d5JooXuON3x8/PzR/UYI0Va64/8zGTY
      oL+PC1Yc1wFGV0ZEhzhCVkHEJVt/KL4IgLAekUUol8sNZHocBJSjTOOWy56oL1N+VtW8KX8u
      +2RUfP78GWfOnBn9g4wIMtGniXqlc+IW/HEg1g/AGDty4k8jrqgIgkDkJu/u7uLg4EBM3KVL
      l2AYRiTu5qgmVZeySZ83Gg1t/Xx5MeicXXHELyf3n1bI/posRoCTInyCkdVOPQrIMnZaEUWV
      q13XxadPn3D16lVcuXIFExMT+N3vfif0gaOYVNlBFJfgA0B4f3WponE7gvqd/KymaeL58+c4
      f/78qVsEss6UlfiBXjPocRteToUZNCtM08Ti4iIuXrwoFPUzZ87g1q1b+P7778E5H7hmaRzo
      BeXz+b7bO8X/HB4einN1yGJ6nJiYwMzMzOAPcASQxR3ZaJKkx+hwojvAid15QJimia2tLXDO
      UalUUK/XRcrk5OQkbt++jbW1NZFmqbPwZAW9IMuyUhXWYiwM1ygUCjg4OBiaawdBIKJpTwvU
      +dT5FPot7kEWy6gRuwBG7XIfFarVKnzfx4WLF9B22/B8D4e1QzAWhllPTk7CcRw8ffoUlmWJ
      LLJhrEGypUnmcnEvnM6hHmqHh4dD+yMuXrzYd/Gd1PtKMv3GzbvqfzipsSfuACdhl00CY2FH
      yJnZmZ5QAzmWaHp6Grdv38ajR49g2zaKxWKqa1OlCvXHcRwUCgVx/bgXpltoFOg37CJYW1vr
      K1+naUQ9LNTnk4m/X/1YOl7XCPvEFsBp5PJxoMlvNVs9FhWqMySbJM+ePYsff/wRhmGIinZx
      IlGhUIjIsuqLpvALdTz9QHpDPp8f6iXn83nUarWBzx8WsqKrmyP1fwItDAqyoyogJxFloIPR
      arVOzWDSYn9/H7ZlR7ZZz/dEpxviQLOzszh//jweP34My7JQLpe1egEV1FKtGUT07XZbLK64
      kuWAXg6mscR105G923Gg3anRaPT4TuK7148OsqVH7hPRz4IoW7GI68vXOw0ShrG3t4dGoxH7
      AqjyWLVaBee8b3+nowRjDDMzM/j8+XNnQs3IdwEPcHB4ECnPPT8/j5s3b+LDhw8Aug095AC6
      NGXT43wlw8LzPPzTP/2TUNx1oF64N27ciHBaYYHhwZF47GXCp1L36uJXd+I4fUDn/Dtp8QcA
      jIWFBdRqNXz+/BkHBwfY3d1FEARCnnz58qXoE/zhwwf89NNPgmsdFVQZUrajB0GAmzdvYmdn
      B5ZpwrZsWKYljguCALV6LXKdQqEAx3Gwvr4urpnL5cSOMGh5cJ04pdrFk65nmiYePXqEBw8e
      YGdnJ3YuPn78KDLBZPhB9+9he5+pUE2c6pjU4+Q51Fl2VIuRqgSfBDjnYXl00zThOA62t7fR
      arVQrVYBALOzs6hUKpEHM00TX758QalUwthYctm5LNApTrpJA8Kt9cuXL6hUKqJkux8E8P2u
      jO44Thg9yQzxgjY3N/Hx40d88803kUXl+z5arVZk5xjlS9FxdsMwsLm5iXK5jHa7nTiXjDHs
      7OxEwiBk8YcxA8VCYeDWsTroFrLuXajOu6T3qBbxPRGzZye8h/OwUXtsfwDdlkWwLAsbGxuY
      nZ3NVI5Qh34WlbjjTNPE+vo6ZmZmImIBlTtkjMG0LIyPVSKc7PDwEE+ePMHs7CyuXbsWeRnU
      FSeOa/d7YUkcUIZhGHjx4gWuX78O27axtraGcrkMzrkIea5WqygWi9je3sby8rLwdsdBVzl7
      GMhcXWcU0Hlw+3FzPwgQBD5MwzwxvVOO3/J8L1uDDAJjDFtbW2CMYWpqKrU1BOiVAeMmTDfZ
      8t9UH+fatWs99w9XdzdvYKw81iMjb21toV6vw7IsnD17NtKX4PDwMHFh62TXtMQPQBD4+Pi4
      cOI9evQI4+PjGBsbQ7VaxdzcHOr1OhgLewH08z6PcgGoolwSQ5C5fhqO7vmhkaJf85GjgGzs
      AAB30AUAhLvAjz/+iG+//bbvLmBZFpaWlgCEAWt0vMrRyc6fBMMwsLa2htXVVZHjmE8AACAA
      SURBVMzMzIgmaCpoNyCrULFQjHQKJH1hcXERnHOcPXtW6AO+76PZbIpz46B76f0UO8Mw8Pbt
      W8zOzkbEHp3YkBZkaRmm8JZ67346kUr0acUZul4QBOAIxTcGvZgoileZ1kgWjNpii3M+eE6w
      7/uoVCrY3d0VegKB8mL39/dFJ5gzZ85gfHwcjx49wvXr14VjiRAnhsnbKiljzWYT3377bX/u
      BCMsSR74aDQbCHiAsfJY5F7Xrl1DrVbDw4cPMT8/j4sXLwLoOrCydDjpxwWJ+HO5nOD+hGEs
      OJZljTxMIi1HzyrHi3cJ3tXZGIMDu4cGDGbANm24vjv0AtAVWWCMDb4DAOHEb21tYWZmRnAf
      0zSxsbEB13VFDZ9isSi6BRqGgefPn6NQKODatWtC8czn83BdV0zQ+/fvkc/n0Ww2RTyNbdu4
      cOECGGOxTQ904JyDI1R6HNsJHVOdFErSDXzfx+fPn3F4eIivvvoqsvBoEagcVmetkv/Xzdeb
      N29EV5dRIKlx4EmDRELd557vhUooC/82DBO22Wti55yj5baRs52hlOY4EXGoBQAAX758wezs
      rIh/X15exsTERA+HV604Ozs78H0fhUIBlUoF1WoV79+/h2EYuHDhAsrlMhzHEXIohUD/9V//
      Nf74j/94ILd/KBZxcB6GTJdL5Yi5j35/8uQJKpUKLl++LMZNyS5q0nuSoqvCNE2srq5ifn5+
      JAuAWqSexhBp13clq09I3Lpj6J1YHcVY5fScczTdFnJ2DsYQCyCuweLQwSNTU1Oi6C29jGKx
      qH0ptCB83xcdzj99+gTOOba2tvCzn/1MEDyAiMJimiaq1Sr+9E//FIbRv+O6DowxmIyBcwa3
      7WLP20OpWBKLiQj566+/RhAE+P3vf4/r169jenpajJ/KsAxKdFtbW1hYWIiYFAcB+WFOG/ET
      5HzyIPABZQFEdk4AHPH6BtGVMYTvKW6eh94BLMvC27dvRanCO3fuZHqppmn2pBYSZCWMc46P
      Hz9GvKHDgqxFuVwedidGhUBK8pMnTxAEAR48eCDkSArBlpGkDJPot7y8jLGxMYyNjYWdb3iQ
      2Fs4DmQFG5XSexRotlugx2JgcOze0jVttw0OjiDgMM2Q++tk/Zbbhh/4KDiDx1OpVkDx+bAL
      AOjW35G5d9pBUXOLJOI3DCNidh0V1LKKtm2HnQOlymi+72N7exv7+/vI5XKYm5sDY0x4x3Wc
      nAie+pp9+PABrVYL586dw/TMNAI/EIuJzIKGYcBg6d7DaZb7CS23K28bzIBt9cZCtb12j4PM
      saILhXOOtuci4AEKTr7nGmkR10JrJPGzw2zDOu2ciJ+cK5xzrKys4OrVq0ONMeABDNYbiUjE
      S/Eu+UIeBasgZP/p6WlMTEzg1atXCIIAU1NTojEgdcOh8VqWhf39fTSbTaytr+H2rdu4efMm
      mMHged2CXgHnYa16uQRNikYdcbLs6UMo2CTBZCZ8dBThBBGIMQbH1Bc/S4s4Jj+SHWBQyHb3
      yKAkr+zHjx9x5coV0Rhj0MUW8EB0oKFtVrVzl8vl0FzqBwjAUS6Vke/kF5OiXKvV8MMPP+Dc
      uXPCZErBam/evEGz2cT8/DwWFhbCBRX4kYhN4vQBD8AQTYI3TTNxFzhJpZcsaWl3qbYXKsFg
      gGWYIl5LRRAEwmkJhp4dYBRIEhmPZAGQ3Jv0oig2nKwq1AnG9328ePEClmXh1q1bIyvNQuIG
      GIPBmHiRsthWqVRwcHggRB8whkI+j3J5DEbHScd5mHuwuLiIra0tfPPNN1heXkYQBCIbjeR7
      2nVoTggk93N0+aTBDJgJoQS0Gw4bejIoPN8H52FboTRyuM7mrgMxJiBsX2QeETOOE4FGugA4
      55FWSHIL1chNWRihWavVUK/XAYR+AMdx8OTJE9y9e3fksSLd8AiAtmbyQhIHItnaMi1BuKZh
      wnZslIqh34HMpRQTv7S0hEqlgsnJyXCReR7qzQYY74Zoc3T1BNkUzMAQcA6DTK2GGdkR5NCK
      kxZ9/ICiQhmsFD3f0oLeCyFupxgWR7IALMtC22133NqItBwKs7CKcKRqyfRiyZRIxE8K0MbG
      Bq5du6YNlVDBOReNuuOSTXTnyCDOTyIK7TaiVxmPjoHkfjqXCFQWbxhjaLVbokIdYwwMDJyF
      1g7GEFF41QhL0zDhBX5oOkS3iXexUDxRxZdEIPDwdzkcnnbXfiJcHAIewA8CGEPECPUTDynq
      VmYunucNpwQHHc8qAJHx43keXM8F50C9XkPTMFAulREEgSh12G63I8RfKBSwtbWFc+fOoVar
      9a3rwzlHs9lEu92O5KL2gxq8JkyV6Abq0XUMZvQoZvV6XViKVAKILJRcHgYzUG/UuzEvMGAa
      vJO80iF+aUxyjIxsnWLG8XbuiQMtZF1jtZCAOwvWyr4ADGZk6tQpQ+4uROmWRNxylAHFdhGo
      ve7QC4C4HL20XC4XcntwsE6x2sPaISbGJ+B5Xo8cm8vl8PjxY9y7d08sCvo8zo3eaDREJWZS
      jAeJaBXXDwCf+5EFEZfySHpAqVTqWQT0v+/7sG0b4/Z4ONZWE5yHYzSZCaOzazAoixJcjINz
      Egf0ubanCQYzBMNQESq3DOjj+FPngXN6RwAQzlfOcSIMgzEW4epyPgdV5KBcD3X+qNniUAtA
      FwYgewCJY1CIcaFQgOeFWyWFObx79w63bt1Cu90WxWWJuNVEciJ++YHi4k2yIIxK7BRoZXoT
      qTqOWq2GQqEgFqouAywIAuTzeXBw8aIMw0CgIX7isEEnPibcJTh9CQz5jEcJxpjWzg90djla
      GqzzSUe85DwAM4yItVSIhOEfoPUDztFoNoRImATOeWpxUbRJHYqDSvB9X8TNqFwRgBgYNZQg
      McbzPKGoMMZE4JIcwlyv1wUhkY2+WCwOnJ5Jsr/g9hxgRm+mkw7kEfY8T7Rwla8l6wjFQlE8
      uxBvoG/gEVqHwtgYAPB50Fks6Z4pq7lyVJCfg0ybpNSH5l55kHROlPjV68igueWMj1RRFl0i
      RwWSxXRyK3F/Wby4efOm8AVQ6QxaBETstDOoZU8oe4rs+1mfgwdccH9iAv0IXwX5AEhBFi9K
      kumBUC8gE2qcLkIg/wBjDIx3UghTSkCMMfAg1DVkptZsNkXlbDLzmqaJQqGAvb092LaNUqkk
      dmLXdVGpVNBut5HP51GtVlOnwDIWNqL2Ax85u7dxyUBgXV1hlBAzFFfvZZRQ23uSiPD58+dI
      nX1qdEFbGYUiy2ZBWQYPOBdmy0zoDIXkTdpesy4k3/dxeHgoRLe4uSuXyqhUxkWYeHhvNfEk
      JHhyoAU936d4LMbEefT3+vq62EGpbSvVGdrZ2cHe3h4YY9jY2MCXL1/EdxsbGwAQ0c/S3N+2
      bNjWcCHMMgxmDGxlSrwu0NufN81kp5HDdOeon1MBq3w+L7x1nHNh1pI5Kok95DTrXncwJdHs
      eCgt00zt4NE9J/00m000m01h1qUfKtFomibyuRwqYxWMlcdgdeRmGjkHifthPrNt22AMouyJ
      +txxCM2phmAKBwcHqFQq4vkonxqAsI4cHh6KPsSmaQorG+0QWWEeoVNrlGArKytcbLfS9i9r
      2zLnVb9XQS9I53QgCxFZg4DwZTx+/BgPHjxAo9FAo9GA53nCvCWnJZJ9Xu0wf1Jyr7i3wjyo
      Eh3VUJK5PSXg0BxyzlFvNOC67W6IhDT3oZhSBDp+jyyQg8xojMT9HccR3ngAwqdCCUi2bYsw
      cMMwsLu7i/Hx8aHn67ShR5voISyNSzuO+IlA4zRwSmoBurqC3BCPCtk2m024ris8yq7rRnSH
      w8NDsUDIUsR0BupjgG4+6Bnk5n1yYSna4ahimm3bODg8EATeXURFMACtFBWp48YW8ACMd8cX
      l0lH4yyXy6LUDCEIgiMh/rThEkcJoQTL2f3ywOTdIWmA9L3M3YHe2j6y17TRaGB1dRW3bt0S
      3IoqttEiIAKRdxRS0sgJFtcm9aRA80RyM4lz9B05bEgZ5ZyjVCyJObFtBznHGbrKA2NhXvQg
      Vr7jQNcKxwFwIYYOshDIk5z1XEtXvo6gij1J0E2wvJBkkQcIiePTp0+4c+dORAehRUB/04KS
      YzlkEYFKh9BiOG04PDxEsVjsyPPd+STLl/zstmXDqTiR5xoWJ8FV+4GYIpV15EHHD9PxlGdN
      EuIdIwhDdkugiAUadOUR1JorNDAgJPoPHz6Ijim2bePKlSuiUK0OJBqRW1unEwAQ3M2yLORy
      uVO3G9DzlUqlSPg3/cggRZkxFtY49fxTScCDQPhJeCA4vsij6Fh4yGlKFrkwSrY/XVKg3iCG
      DKEDDDvROgsPEBL/ixcvcP/+/UiHFdm+rxI0ycA0aaQ7kNxM/gT5uCAIhMhwmhaBLA7J1i2g
      mwxEYpFcX58KZMUtgmEZ1nGDQ65lyiMiIad/Qcc7zBgCBJ0dvf8zyn6TrDBoEKOGbB6cnp7G
      x48fhSKoWkJk+L4v8otFVCaiLUgp/kfWJ+herVbrVKYLUvgEjZucfhSzInN/zsOoy3KpDGaw
      nr4FoxrPccYXUeiHfF/Ze+66Ljy/K0HIfpl+MAxjIO9wGJU7Ik4SR3S+72N+fh4rKyv4/vvv
      tQqy/CKIIEikkdMi5WoQciUHmlgikNO6CMibzRgTCrJM+EA3TNfzPARBEFatsKNKtPz/oODg
      EWfZUUNnKetZhJ1fj7J2KGNhHvrY2BjK5TLY5ubmUAkxRIBq9KTsP5BDoZ89eyaquslQx0Be
      YPl8OX+WFoCqE8gWrdOoEwDA2NiYaJlEIQjys+k60TRbTbRa7cSssazMTBeUd5TwfV9weZX4
      VWujrorEsKBWV/V6Ha12O8wMHMVFk1IWGWN4/fo1xsbGYNs27t27h+fPn4uEctkZI4PkZcdx
      kMvlRFCcnHdAf8uOOnUnOI0J5M1mUyxM13Wxv78vOD7QTX+UmUI+l0eh06JVDlsZqiDBMeoR
      Opu//JxRJ+vw3F8OTARCP0exWER1v9rJ0wjNz0PdKS5NT17dJLbQZ7QINjc3Ua1Wsbm5iRcv
      XkTkeGEJMLqly6lWJxBdBKRA0sPKRXZ1gWanAaTQywv24OCgm7QvKcOy1cg0TeQLBfgj1AWO
      EzLBy95x1QwuK8mDgHMugvE83xMta/f394UISlEDQ8WVyp5d+ebyy/E8L7JLkPVnenpayPWO
      4+Dhw4f46quvIh5HchRR8wq6BtnU5dwDWSdwOk4kii86jWg0GrAdB416XRBDrVYTudE0T2oY
      Ss40YZkm6o26sH4AUd+IuvDTMAEKJ5GvmebYtNenY2SGKH+n7gR+0GshTPMMYnw8zERwHAel
      UgkHBwdoC1qV5mZQHYBED3Wl6mR76m4Sx7VoAqrVKg4PD1Gv1zE1NYXFxUVcvnwZxWKYD2ua
      plCMgyAQpkXd9YrF4qn0fkbAGEwzFAUpT5jzsDxIqVQCeNfPIROC0Ql0qx3WNC9dvnw28yDZ
      6I2E80LuGoB3Au2y2t6JZqhGq7zA5UXMGEvtEFPnwA8CmEZYlDmfz+Pw8FBEFcuxVpZpDb4A
      dOKP7iWQsqeWUNdB9TwbhoH379+jXq/j66+/7lEOgyAQVSfU8OJisXgqxR8ZnHMYZkjcVI1C
      +EeMsLFHoxkWFMjlcigWipH5IZOxHIYdlaWZqMqdRRci4tSZISnZhTEDWcqkyM8sw5PaWskL
      wDTNvruRSvj0/IVCQeiM+wcHaDQbMFk3OpauaVv26BaATPyy7X5paQkXLlxIJbPqLAM0tp2d
      HUxNTUV2GPqeyppPTU2hWq2OtPz4USPgAWzHgdtuRwplhXEywNhYWfgQLMvCeGVciH+y1UhO
      Aue822pJThpvNpuikl0S+hFdELM4BoEf+HA9F+g8u8HCAD7b7O0XoBuL/EOtcEnMOjg4QLPV
      jDyTzGQd2xlcB1AfPm7LpO07zQLQya2kJ+zu7kZKpjPGsLe3h5WVFdy7d68rO3YKa929ezdy
      LZlbnKbFYTADXifytd1uw2Thtm8yUyjHhUIRZ85MotlsiFRD2YkEQESWMhbtOywzpWKxiEKh
      EAkzISW7n3/BD3xB9CYbXcyVaZgw7E4lh8APezhY6Ymfxkxcn3ZQKrhmGKaw+Kgilh/4g+8A
      aQq0bm5ugjEm4sqHgWmaWFxcxKVLl8A5x+LiIhqNBm7fvh2JqTEMAwcHB9je3objOGJnWFlZ
      Aedhcv6vf/3rU7UIAh7AyeXQbDR77Pxk0bBtB+OVitB/5HgimbnISTiGYaBWqwnLx9jYWI/p
      lHMuahjR+ToQ5x8m7CAN0lruZCtjqRSWuJejDOTMRt/3w9TVjrhFTNkwjNEUx9XBMMJeXg8e
      PBgJsXHOsbe3h8uXL4uHunXrVk9AWRAEKJVKkZh2xsKq0obRrTJ9msDA4HesZZ7nRnIbSBn0
      PBc7uzsYHx+PtH5VRUYyodJPuVwW/hD637btSARwuVzG4eFhpMwNXS9ybdYxfHAOdkQJSGnf
      DY2dMt10DIGOIVGQvOxtN2TcnA9oBiUu1G+ARxGe7Ps+Xr58iXv37iXWyZQJQ56QT58+jbTE
      +ijAGIPv+XByVmiFMXu/J5FoZ2cHpVIJtmVHrEOy/0Dl4hRo12q1QgLoJLqTMy4Iwo45ct5v
      HCGGYzkdDKRUKgl9COjmWugg65Occ7x+/RpPnr0cbAHQiuuHS5cuDXJ5LciJtrGxgVu3bg1U
      JDYIAly/fv3U7QBAJ3sroKJYejGAdoNarYbx8XFRfSMIAsHV464NQPhFKA9YZlC0gEbZbf4o
      QVECMnOLY7i0E6ysrOAv/t3f4beP3+MwyKEwNjnYAqCJUrdfFZ8+fcL9+/cHuUUPOOe4fft2
      T2W5rFhcXIx0XD9NCAm5UxZGEwYs28trtRrGxsaEwkcMwradsF+bJOKQz4a8yaJ6n7LQSqUS
      arWob0G9/2lBoVAQv+sIX94V6vUG/o8//7f4Dz8uIleZBiufRbFz3EALoGu66kJnDx7lDgCg
      R4EbBGl3r5NAEKTrg0W7xF61KkoOAmExMVGVwjTh2DYc24kkHslWI7qWrDNUKhW4rot2u62v
      p38KFgHligO942m326IYMwC8+/AJ//P/9ddoOVPIj8/0XGsgLYZziCQG2bSk4vPnz4Nc/sjA
      edgQ+/3796fiRcoI7dg2Aj9IleAfyuKhMhyWdzFFmReDGQg6TrL9g31s7+6g3miIYllUwl7N
      QyAlkjEmPO6nMeaoUCho31+73cbh4aEg/sfPXuJ/+je/QdOe1MYcMcYGVYIZDGaCKj8ajGkT
      d06TqZEwOTkpgtFOU6QoB+8k/biZrCthWASHqXjRqRJEwAMEvo9a7RCNRmgyLOQLEcYlmw5l
      kM8gLnnpJEA93FS4ritSbgHg5Zv3+F//4p/AcpXIcbLHmLEBwqEZYwCHKCZldZwuJ1GTZxAE
      QdjJ5eHDh2i1W6mddEcF4kz5fCG012co70JKcdx39D0dEwQBDg8PUd2vCm4oe4911zhNISX5
      fB7FYrHncyrsRdjd3cX/8ue/AcvFl3Kkec9MtXGdNnRQ68ucFpimiZ///OdY/rIMxhg830Nw
      zIsgCAJ4gQ/DNJHL59Bqt8AlG3zq6/AAhhG/iOk+pAyzjq5Q3a9GzqEUTbn/MHHKtA1IjhKl
      Ukkr+lBZSllx/9/+/K/g5dIZOgbbAVIiTlY7DSCvMEcYfcmPUVzjPGx8USyEVaVbrZZoqZQV
      aqM9+R4UE8/QCTlgFHJsoN1uo7pfFWETZEKVvai0aCh34SRAzi5dvwgKFZFFt2cvXuLFRnor
      4ZHKLTs7O0d5+VQQ8S5B1PJD3V583ydV5tjgBwEcJ6zUzIPhA8sYY5FuNkT8FEothxWHYlEY
      et1ut7F/sN8NUVa4PinIWR2a6vV0UcJpn6tSqWhlfh3xc87xl3/7A+y8vvqdDpmU4CziDwCc
      PXs2MjjqMXWccfoc3SZsjBki1n1zczMsytUJ6T1OMNYpeIvRlKMJ/KDzbnwYoKZ/8cnlwisa
      oBNKDZQ6sj5ZhORQCUpA6kfEOkKXcwfo3mnnu1AoaBcf7d6qOXuvWsXzpV0UJws958QhEyWm
      CYGQ8eXLFwDoRvp1KoEdLxhCS5UhmDznXNi6jzq4SzsixjrtUUend4Scuxtfb/Xpmybb/1ut
      ZhgzL+kBapgF1Q6Nu7fK8cV36FqQsswxOex096rValpG/PCHRyhMzKe+B3CEIpA6ESR/DtoF
      cNAxgHc7sstcbGxsDIVC4cQsQKO8LWNhUwwRDp0yk0q2EjWbTdQa3caFKgqFAiqVCgzTELpF
      nHgTMcciu5WNmp+o4+Ccix4HOnxc3QlbLmVA6r1fDjrKipMMoJI5j2wDli0Hx4lwDKEYNEqE
      74eDM0TaE6WBYRgIfI5GvQ7HsrWclwLNxivjYTpqo45GswnGu9/r7mcaZqfqGxeWtqRYJ7nv
      mgwK204qGLyyVQWQrosNIfUCGMRxdOHChUzHjxoq4ROazaaoPncy1g0e+W9UYAAsw4Lnu2h7
      beEV7veMkblptbSBdSQ2klJcLpVRKBQ7DraG4PayuCN2AjDABAzJC6vCcZzYPG6ylDUTysRz
      zlFrtDPLNJkO7zeRFFFIJc1XV1ezjeYYYJomnj59ivv375+4p3qUOkD3omGZcdt2EHCOtuf2
      iCth8nvQ7f7Oun6AdrsVVlCQ2o8SfN/H/v6+yB0wDQOlYglnJs6ElT94ENHx5Kw1WT+Q0zk5
      wlTGOOKnVM5ULZoG2NFT7wBJ3J+U40ePHglZe3Z2Fvl8/uSJTHF912o1/OxnP9MGxMnHAtEF
      T1YsNVkl83jQrXkkF/UaBETMAIRuJa7Fw06T3DARcB9e4IlEGoMsPayjineqNZPliJxLlmWJ
      XmyyeNJqtdBoNEREpmmaGCuPoVQsodHsJul3x6KfA9u2UamMJ1a7o7ZT/cAYQz7noJoxUDiz
      /Y+2x93dXdTrdUxOTuLly5c4d+4cvvnmGzGYYey/WRBw3nmRehDh0zharZDDzc3N9SxOKtsn
      F1slbikHUfGOEG9lrGMPAOCA3albZFs2/CCM1aFrZ0XQ8SOokBeCyUzACM3AQRB05Pbe1lcq
      PM9DtVqF4zjI5/PCOkSEr86J0dkRwnRZF67bFk3T6TjGGGzTFjm8cffmnKPVbqFWr6X2k8xP
      jaHT+iw1MvsBKGLw7du3WFhYQLvdxs2bNyPV2Y4LFMvCzGRClBfj9PQ0tre3tcd1u513r6Ul
      fgDGAJ6z0APctUZR9TrD7Hhh/eyhEMKmn/C9NIBEZhGHdruNdrsN27ZFUo26cOTYIgaGnBN2
      uRHOuQ7Xt0wr4nlWETrxAtRqNbRazUxOwktzZ/BobTfTHGbSAah+peu6KJVKmJubE/1xT07U
      4YlxPLpdaD2GTVAyuS25/mVrSjc8wIrYyVOPlHNRtU6uqhb4YZI7LYS0uyYR1HEp8q7r4uDg
      AAcHB5GezfIcyxXeZF+DaZiwLVsk6+vg+z72Dw6ws7ONZqupTe9Mws+/uYtGdTPTM2UWgajS
      282bN3taFp0UqBGcyt3iRLAs1iyylZPCRg617EFrHKZtwfXcnqK0jIURtr7vhzupP3pmQuER
      5I8ZBp7n4eDgAPl8XohDaa6ZJG75QYDqflVUsBhEvFyYn8fl6TwyhAJltwK1Wi3s7e3B871O
      FOXJKbnCkcOiAkk//YPkVfVacS9IKK2GOTDnB8LEFV8p5x65BzPAAx5J9xsFiPjpPqMCtVQF
      egvf6n7i7h10iN/zPOGYG2ScjDH8ya/uwnNbsRYoFal2AKqp6NgOFhcXcePGDbieK2y/Jwmd
      vVp+UJXTys3nerhwAoYlnFwuL2TaJHAe9kXIGnfVD5zzIxGXZEWZssjS3IOIk3Pe6YfmDUz4
      QEijS5+/YL/WwOHGJ7Ty86R60x3BEEYF2GZoMXKclJXhSMYOeKcWJ+s2xWDG6Qh3jnPJyxNq
      GAbevHmDb775JlINLQvIds6YkWi+kxGmFkbrUibeo9PIetQIeDDSqm7iuh1bfbPZFOVWZD1A
      fi+hpS38vd0O6xQFfjBwiEy9Xsc/PHyE1yv74OUZjE1ex6/+RRl/+/cPYRcntOe4nKNZd4HD
      ZroFYFECdafctOe6kXzg04J+HJ0xhoWFhaFMs4wZYIx3CLq/BMk5h2mZsZUe4jDqmkrHpSzL
      dnvTNFEsFlGr10NnXMARBD6AMCQbSNYLkuB5Hv7+dz/i0ZcDVBauo3L5svhuau4sHty9hiev
      PsPM9WaQMcZg2Q4AJ5sOwDnH+fPnsbW1hXx+tHLqsNC54FXU63VUq9WhFkC3dHh6XcDoOJey
      vOhR+k8GJbJhEcnWCrhIzLE6ZutBx7S2sYH/89/+Ld61pzB58TYsTcbatVt3cfvqHPxWsgc5
      szlgfHy8m0iCk7cApQVjDDs7O5icnByauBh6LU5JGCTk4aQ96KMChWnLIlFWyHPx4s17/D//
      +B7O2TtwEpgwYwy3vv4ZHty+AL++G/vOB7KHra2tIUjJ0cg54gedruAnFH4MhPb/URTqzWKf
      ZoaRueH1fy5MJS0CPxAZZmkhzy/RzU/PXuE/vt3H2Fy6elOMMVy7dQ9/9If/BYpBFZ5mN8hc
      Hdo0Tezv76NcLqci5m5DhVAZOsoWmHGgPgWXLl0aqWWlHzjnsGxLVHvIQthx/deOA0fVPZIc
      jUlVxakWkexkC3iAl28/4O/eHaI8OTfQvTnnWHzzHG/evMfuYQt26QwM087uCFtbW4NpmmEL
      nzRg3YfCMcqisj7QaDQi1cKOC6GhIPSSZ027PNldgNoMDW6W1IGiCKhSHVkSqdxlXOW/9Y1N
      /ObFBsbnrwx8b8YYLt+8h8s37+GwuoPVpU/Y2dnJtgAYY9je3satW7dSn2Mw41gTzoFwnMvL
      y1hdXQVjDNevX8fNmzdPpCQiY4MR83HuVCoMZiDA0eggFNuvmkfj4HkezQtV/QAAF8dJREFU
      /t/fPkVl4c7I8jfK45O4cX8SQMZQCMaYqCp8WutrAhCdJ3/1q1+JqmcnMd7Q2TPYSzNN89gU
      YdE7KyKmHS3XSqsL/qffPwY/c/nIxpE5FGJYO/pxgBwz6+vrPVWsjxMMrFO0Kvu51DN4EGQJ
      Rafj5F7O4e+BKLVyUvPXbDbxw+IecvleW/6okHmGq9XqqbdScM5x+fJlkchx3KDtPdx9OEwz
      OyEHQTBQPR7OuYjTokywpON9qSsMeblpR/B9H57vw+tznVGCEu4DHuAfHz5C5ez1vv6dYZDZ
      EXYUXV+OApxzvH//PlLq4zgWA2Nhwv2LFy/Qbrfx8Pvv8fLFy4G4+UC6g+9pQxBU0EJBx6NP
      8jXvBO11g9IA8O5iOWpQjJDneXi5vNvx2B7dvTK/Feq/etoRBAEuXryI77//HktLS3jx4gVW
      VlaOtHN8q9XC06dP4fs+vv76a5RKJXz3i+9w5coVvHjxIvO95X5dWdAVW9JzTYqstTq5DnIc
      P2PUuT3zUAYcN7C+voF27szR5E2jq4Nkpoatra1IxbfTCsr+mpubiyRrPH78GPfv3x+5UswY
      w7Nnz/DLX/5SiD9AaMWoVCphVeZqFZVKJfW9Pc/LFBVqGAZK+TJct40g4H2TxCOBgjGhHbQw
      1OOPCrQbPX/9DhOz14482jjTAhDb5ClXggmUdqj+fRQOnqWlJf3C6mRY3rhxA4uLi2i32/j2
      229TW3jCngH9FwBlWrVbra7PxWCxpVcom0xO94zDcfpuLNOC53vYPGiDFYyRmT7jMFB1aOpa
      flJK5iCwLAvr6+soFAqJFSHU1qNJYCwsFrW8vIzJycnYglK+H2DizBk8ePAgsxiUVAgK6JYt
      pDwCuid5cvs9y0kFyiWBgWGvcTxe8Mw7ALUnffz4Mc6ePYv19XXMzMyIKgunMYjLNE08f/4c
      586dw/z8vEi7C3i3okLWXY0xhq2tLZHnWy6XY5+dc44P79/DMAzcu3dvoDmijohkrqTqHEEQ
      xC4SHoQlUIIgOOG0pfTgPKwj63F9D7BRI7MOQGG99+7dg2EYmJ6extraGh49eoSpqSlcuHDh
      RG3vOjAWltmuVCpotUNi4QEXsu0gYw2CACsrKyK5Jo6oGWPgQYDZ2VmMj48PPDftdjsShEeh
      A/3AO6EGaYMXTwN8z4PP+ZH64mguBo5KE1Gevo+ZmRncv38f58+fxw8//CDyRHXnZHHSjAqc
      857AMhLf0o6DArmo8t3r169x+/btVAqtYRj49OnT0IyBzINpiZ/AgwDslDa806EjwB1Luu3I
      bIK0IO7fv99DbHEEH8eR4nJ6hxlbtVqNVKemQKy449VUylevXmFhYQGfP3/GwsICpqenw3KA
      abiwZBU6OYRdafiAoRnHBcbCrEPrmAKGR24U//jxI86dOyf+zkL8SQntw4Cuk8aiEGcKbLfb
      mJiYwPj4uFg8abkw+SRWVlawsLCQ/QFGgU4LJts5uTBrguxtls2sBMMwYHWC8bIwzkEw8nV2
      9epVPHv2TFgk0m67cUntw8KyLGxvb2N6elprgWGMRRpC6Kwi9DcR/SCizNTUFIrF4ol60snK
      dZTOwDQIPc7dUjAE2Qo3XrBi51gVpQcVqznnMOimWcx/BB0HZIzhl7/8JRYXFxPd/7LZcZB7
      p4Fpmnj48CEqlQrOnTsnFHjh5ezI82/fvsXq6moicZ47d26oMVJl5b29vYGvMQqQKJbL5eA4
      zomJQ5ZU/0emA9Irp0pHW2pT+D/W19c5BXxkSYCgJmWVSkV7zsHBAdbW1nDt2jXYti2cUGmI
      SJW/BwHlAJfLZeTzeRweHmJrawuMMezu7iKfz2NmZgbLy8v45ptv8PnzZzQajbDmkevC8zxR
      muTg4ACNRgMzMzMDjUV+lr29PUxMTIzs5aZxZCXhuELb40QZlRESVlZX8Rc/rGJyPluPibRp
      ugQrLr9VTkmjC8sXl8UClXMGQYCxsTHk83m4rouXL1+i3W4L02mWRaCT29O8dPLOfvfddwiC
      AB8/fsT9+/exu7uLS5e6OaVTU1NwXRdnz57F8vIydnZ2sLy8HCmiaxjGSJp9cM6xurqKYrE4
      EjEk4AF8PwBjGKjRn1zc4Kgg05HuvemIn3OOudlZ2M3nANLPe1biZ4zpc4LjRBv1Bo1GAwAi
      pfx0Mhmd+/jxY2E3t21biD6UEicfr6si0G9RquPd39/Hx48fkc/nce3aNREZGhdaEHe/p0+f
      4uuvvx6Ia6sv3XVdfPz4EV/d/Co2TCHNNTnnkbKUWRdAPp9Hu90+MjFDfv9E5KqOJXN/3Xn/
      8bffY9m6kDoiNGkBxOmXPQsgSRlVbyA/lHq+Wo/RNE3UajVRPu/Zs2ewLAv5fB7lchmzs7OR
      6+lKHuoeuN+qNwxDJJf4vo9cLpfZCpImQT1uzqgzJhUDMAwDjx49woMHDzqtUgeL9qRukN3m
      19mqTuRyudjGE8NY4nSELwcjytdTdT+V9prNJv73v/oeU5fvprp3nGUR6JamUYsT9F0AWWJF
      5HNpVcur2/M8bGxsYGFhAblcTtScX11dxeTkpOhHKw887sHSjCvuWeIIOk60EiXNU5hu1bF5
      vidi7Mni4bou6vU6JiYmBlKsibAGKdRLoOA5lVjV3TGtDpbGKqPbXXXXkPH3v/sRH7wZ5ArJ
      WWFJPiU5pLrvAhgG6urXiULqvcI+tS20Wi2Mj4/3yINxZsl+213SjkHNPOg+OvlU/tu2bbRa
      rQjB6Z6Pnk1lKPJ16ffl5WXk83lMTU0diQUsC1RRRBZV0jIZtSu8joHFmZdVpinD8zz8m7/6
      LfLn72nvn1bsidsBRuoH6CeTy4OSjy0Wi/j48aOW+HVIsvn2+y4IAhFXA/Tfhm3bRrPVjBT1
      ilvc9H+/3YvzsMQkgHTN344InHfDWVTfRhomQ++LwjMoJkqd/6RdUr4HtWKivgOO48C2bfzp
      r+5if+1TzxgyiX0xouaRO5wF149RbIFQTj5z5kwkqjGJAw2yMNTv2+12D6dTdydqCRW3QJK2
      cfrxA1/k6MoIggDT09N48eLFke4AMqGqP0Sw2g7vKeaRiD+NIq3ugOrftm3j6dOnePbsGRYX
      F7G6uopXr14hl8thdmYa//yrSRzurGuv1+++4kezCI7EJRhaKDjIzCEmV9MpnnMulDKgW0Qr
      aSdJK4vrjvEDH7YVlugjlzxjTGREkVeYHGVqqHEc8cfpD7JYoXuWQqGAjc1NzM7MDCzP6yCL
      FWnlbXlcSUxGXkBpoDIanShkmiby+Xyk89Ds7CxWV1cxNTWFuzevw/Pf4PvlTZTOzKa6L+1w
      QMjM0MlvljHSBRDapcNKCHQnWTQgYtDFfgBAuVwWsfo6pCV+VQxRryEfwznvaVpBIgGFDcjh
      D1mJlBZ0XCfHs2fPYnZuLkxj7DTJW1tfx9sPn+B6PizTwNVLF3Beiq/qhyRFVKen0VhUpVqn
      F2X13OuIP84UOj09HVai6CyAXC6H7e1tLCwsIAgC/PzrO8jn3uFvXy1hbO5i33u3Wq2wPHut
      FtYl7WTnyRjZAiDiD4kEvXdClOjkiabwgDiOkkYZUxUt+V6R64CJeQg472mCF3mmjpOP896W
      Sv2UvKgCpp17BEGA9fV1uK4L27ZRKBbxd7/7EcHYDOZu/ByWbcP3PLxY+Ywnb/8Rf/iLB6lK
      UiaJaHHMQSVI3TOpim4WqMQvX4fusb+/j4mJiYhj1TAM1Ot1FIuhFejerRuYmqjgL3/7FGzq
      CpxcfIVoSiKiImPaXXgUVqCAc/h++jAHdQegtMKzZ8/2LII0xK+DTqYNgk5XdMMUtnn12uoz
      2LatLeYaJwIBvaZDP/BjiwKTqPWb3/wGu56Jiw/+AKbGqRUEAZZf/oT/6me3+/YQi+uJRYSn
      fq+TyZMINkskLO0q9L+6gCzLwufPn3FwcIALFy5gfHxc5G2TaPT582dcuHAhck/XdfH//e5H
      PFmuYfzsNZhWtPJ0o9EQfYhd1xWtXXvGl+op+iDIUDgpThtfXl7WyoajlIupUFRY36aX8FUO
      l5SQrnLMuGNo90iSqZ8+fYqNvQNcuP9LmDEhEoZh4Oytb/APv3+c+Ixx3J0Wn46DxxG1uqPJ
      CyANVOOCfD7nYSrpixcvYBgG7t+/L8zgalM93dhs28a//Gd/gP/xz36JBfczqh8fY397HVwy
      bdP5lhWNLA2CAPvb66h+fDy8CCTkaKmsdT4X9g52XReu50aOhdHLLd+9e4erV68OLGfroC6e
      IAib/Kmcrh8BZwkVkO+pvvykBTA3N4eny7uwbLsjounHY5omDuCg0WhodwFV9lfFwbSKqyoS
      DsL5AURMzfL1gJAol5aWcO/evYjcrwvLWVhYwNramojolZ+3VCziv/mjX+OPg7BJ3ttPi3j+
      4QtYbgw1ZgLMAAfQbjZQdEyMFyzMjDn4Z7cu4tLFu8MvALVNKmMMrXZLhB7ID24wA+CSU4J1
      HVMzMzPC4jJKrh+5f5+OkjJs205VjkQnK+t2Lp3OQPA8D7nKpDguSYmfu3gV799/wL178eEB
      OtElKW9ZHRfJy+oukQXy+bK447oums0m2u02ZmZmhEc+SQy3bRulUgmfPn3CpUuXusaUjn7G
      eVgkwDIN3L52AX/6X/9zEdFL0QY7OzuYm5uLmLUZY6NNiZT/l4utEnwebdRML+bixYt48eJF
      xAR2lN7pfpCJp99x/e6Z5txWu41cp+IeR9iHLHFh+v2D+WSunTaBRyaMJOtRGqjH27aN58+f
      o1wuo1wuC+KXDQxJ8zk+Po7l5WXUajXRnGVtbQ0rKysYHx8H5xxXrlxBbbeKuutic/kLzp47
      j62VRazu+3hw5zr+4e/+BjBz8FwP3/zBrzCWs4ZfAAYzwFm8K5seQPyO6MSQPEgKsPwCh9kJ
      dJaQtC8wbTGqQcYjExc931i5jPriIlqtlqjxE4fq7jZunjnT916yyJKVcOWxydcbFLTLT0xM
      4Ny5c3Bdtye0RL63en8gpJPbt2/jzZs3mJiYgO/7sCwL3333Hba3t8Vnr969xsWrV7C8uoaZ
      M2P48cffY2nLxczsDCam5nDv3j3sfnyElaqLm7MjWAChnGvC89yel6wqTKQDqL0XOA+T1m3b
      Hkl/3H4vzDAM5PP52DAECs8eBXQLUX3xlUoFZrsWMdXF7UAH619w4c6vUt1zmDEPew0ZuVwO
      T58+xf3790UIvc70LBsN4sb11VdfwTAMbGxs4MyZM3BdF5VKpbPQfRzsbeG3/7iN6akJtFpt
      XLn7LS7s11Db38f2xjL+8v9+Dj4xgTt35gEU+i8AxpJDZw3DAPf9MMioUwufd+JmesxtnX/q
      5JqmiZ2dHVFTaBjrT5qXNzY2Jkxsoo2n8szDgq6pCwfWWbu+vnIOrzdWwebOij5apVIpMrbd
      zXXcPpfsMVbFvVESclYwFlZ42N/fx+XLlyM0FPcM/eaexGYKIpT1Fr9Vw93v/hDtehWe20Kt
      foiNlWW0Wx7KYPijf/knWP/wAdbCAsodHbXvAsjlcsjn89oFQJXJAEkhAYcX6D2QcXZwstnS
      Aw1DgDo5WEWj0RBdC2U7P51HZrisySLyy1AJUI0kVZ/x8qWLqL95h+X1FcxfuioURjLhbS5/
      xiQ/xO17t3vuqyN6mQEBXVPgUeVfq7BtGxsbG9jY2MDc3BwmJyd7pAGtYyrFuw97GoQNtw2j
      m1hv5SuYynHwSl7Mwa9nz4vn/vz5MxYuXoxYklItgDhCEOYtAD4PwIN4D6P8u23bqFarmJyc
      RKvVQr1ex61bt2K9dYMgifu1222hGFJQnDy+QQhEXXS6+/d7tjtfXcf4ygoe//RbHLiAG3BY
      JsOYBdy9ch6XL0WJX0f4ujwMx3Hw/v17bG5u4he/+MWRLwLDMLCzsyPKxMtmzmERPqMfYTZg
      /ec2l8uhWCz2Wuv6eYLJlt3Pfsw573YYUUQfznmnXVBYXe3ly5eYn58HEHacOYoGdlktPjLI
      p5El2Eu+p6r7AN1KdFl2uE+fPmFiYgITExM938Vx+ojI2RFfl5aWMDY2homJCWxubkZMzqMC
      iZQUTLixsYHp6enY+6ie5rSNtIOg23aXnhfolndXRW95Lj59+oTr169HkqH67gBZCMFgBpjR
      6zxirBv+QA86PT0N0zQxOzs7NPFbloVisYiDg4NMnC1uwskBFmehUM/XEaPOmqL7m7C69B7v
      l1bhttv47r/8I2wvvsDKfoCnL1/jv/2TP8bD7/8Tmi5HaWIa39y9GXs/eZy5XA4//PADfvGL
      X6DZbML3faytrWF2Nl00ZRo4TuiY29nZwe7uLiYnJ8EYE4GN/ZCW+Em89nmvlMAYE+EmOkZA
      x1C/hZ4FEPeyBgFjYY133/cRIIgQP11/fn4+taMpLSzLQrlcjq1Lqo4x6Vlpx0vyFMsciIgw
      jvjTzGu1WgUAtOtVbO7u4/OHd3j6bhmlyXmAMdy88zUAjqfPXohzksQty7JQr9eF5YV0MDI0
      DKLjqHAcB3t7e6jVapiYmMD58+fFHPQrGEw7hqqz6eaKpAv5e2Fk4Bxmp5aobkckBEGAa9eu
      4cWLF7hx40bX36TLiBoWJOo4tgPbsiNbo2ma2NvbS+wWnhWe54kw6n7WjzTbbNL3xLGAaAxN
      XACafM+k69bqh6jVaqi32hgrFVGZv4L/4b//7/Dg1jV8ev8GHz68w3/4d3+DypnpHsLX3dP3
      fSwtLUXyfj3Pw/j4OJ48eSJ6PAwDwzCwtraGhYUFkTZKHth+868TCdWoAvUcnajJQBKG0VfJ
      dxwH8/PzUT1gY2ODqxYKuukg6Kf4/f73v8eNGzcwOTk5MrmfQrFN0+xJeFDHkua5HMeJlHaU
      rVPyFktikhzyoW67cmBXkq61t7WGj59XYVgO7ty9g+2VRaxu7iJXnsCF+WmMj1ewsb6FqenJ
      yMIDeh2QlmXhxYsXuH//vlYGz+VyePfuHRzHwYULFwZmRoVCAfv7+8jn86ljjNQ5offhBz44
      ADOmVRPJ/vQ7XY/zaJl7XdwREBpe3r9/j6tXr0YkD0slimHFoH6iRT6fF167kaHzrJ7nxVa3
      y6J86haxKg5xHkYzUrmXuPupeoRuDIZhYPbsRUzPnxcEUrr6FS5eDa/z448/4sGDB4L447i+
      nE1H6Zw6tFotXL16Fa1WC9VqFWNjY6nFUaqtBACHh4fY2dnJVPA37h3QuCkHQ3cetXSSmY58
      LoDI7iwzr+3tbVy7dq2XWaQe+YBQOebly5exuLiIS5cujcwUxxjryfZXv6cxpFkEqiKl0wXo
      OmRG7fcsSQuQEvV1IFk9adxEkO12G9vb2zAMA7dv346IhSpc14XjONjc3ASAnuhS6kCjPsO7
      d+/QaDTAGMOlS5dw8eLF1BYlWSfSMV4iToP37gKRc3lo+w+EBSjKZNRdgKxSc3NzwhNNOLIF
      EMelxsfHxaBGtQsQx9NZQnR/p10EcdcjtNvtRFlcNfUNArHNS1xRXpSGYWBrawtbW1u4e/cu
      pqamkMvlUnF0z/NEbI48Tsuy8OzZMxiGAcdxRBegS5cuYX5+HsXi/1/a9bQuEALRV4awi/Rn
      +wIRBB2C7n3/Q6fOnToGJUF0mGDD/B0WxTbdHfu9s8sqzui85ziW3shy5NR2+BNiJEYwMLBo
      7pOLHh42GAw+LrO05yuci/e7eaHneDxitVqBiFAURXPQyO59BrpIqDEGt9sNRPTxhGnXCso1
      Hu5KnEKOGBAz9pA/tWPcX7mVtfarKG9o/EIIXC4XbLdbX9A3pkSlxqO1RlEUmM/nOJ1OqOsa
      k8kEy+Xy49E/l5YxHA6zOYMjvV1yp3PyX6OCLjuy1qKqKiilUNc1rtcrqqpqCjtrrW0OB8g1
      jBjc1jubzVhSHCc1muNIAN8BpJQ+XTfWzstwieP9kPC1/5/rBEQErTUWi0W0jpHLeU/1sWtB
      klJiv99jOp1is9l4CTM19lw4J+XshP+RZkMVru/ijhACRIT7/d68D8AdaEx+65PjYjDG4Hw+
      s9rmGEsqBGm34fQ9TJHggrOQ/GJUSimUZenLu0spfW3/w+EApVTy2755eb1e2O12WK/XICI8
      n08f2v0XTv4Od8QucFNhxuOxD6WAb57Z50TGGCil8Hg88AeWC+nKETnkfwAAAABJRU5ErkJg
      gg==
    </thumbnail>
    <thumbnail height='192' name='시트 1' width='192'>
      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
      RK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
